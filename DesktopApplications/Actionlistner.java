package DesktopApplications;
import javax.swing.*;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/* Action Events
 While mouse and keyboard events are available on just about every Swing compo
nent, they can be a little tedious. Most UI libraries provide higher-level events that are
 simpler to think about. Swing is no exception */


 /* The JButton class, for example, sup
 ports an ActionEvent that lets you know the button has been clicked. Most of the
 time this is exactly what you want. But the mouse events are still available if you need
 some special behavior such as reacting to clicks from different mouse buttons, or to
 distinguish between a long and a short press on a touch screen. */

 /* A popular way to demonstrate the button click event is to build a simple counter like
 the one you see in Figure 10-29. Each time you click the button, we update the label.
 This simple proof of concept shows that you are ready to add many buttons with
 many responses. */
public class Actionlistner extends JFrame implements ActionListener {

    JLabel counterLabel;
    int counterValue;
    public Actionlistner()
    {
        super("Action Event counter demo");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());
        setSize(300, 180);

        counterLabel = new JLabel("count : 0", JLabel.CENTER);
        add(counterLabel);

        JButton incrementer = new JButton("Incrementer");
        incrementer.addActionListener(this);
        /*
         * this Keyword:
         * 
         * In Java, this refers to the current instance of the class (Actionlistener in
         * this case).
         * By passing this to addActionListener, you are essentially saying that the
         * current instance of Actionlistener is responsible for handling action events
         * generated by the incrementer button.
         */
        add(incrementer);
    }

    public void actionPerformed(ActionEvent e)
    {
        counterValue++;
        counterLabel.setText("count:" + counterValue);
    }

    public static void main(String [] args)
    {
        Actionlistner demo = new Actionlistner();
        demo.setVisible(true);
    }
    
}
